// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversidadesAPI;

#nullable disable

namespace UniversidadesAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231225172948_Update-Universidades")]
    partial class UpdateUniversidades
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UniversidadesAPI.Models.Carrera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CargaHorarioSemanal")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EstadisticaEntidadId")
                        .HasColumnType("int");

                    b.Property<int?>("FacultadId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanDeEstudiosUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PorcentajeDesercion")
                        .HasColumnType("int");

                    b.Property<int?>("PrecioCuota")
                        .HasColumnType("int");

                    b.Property<bool>("Publica")
                        .HasColumnType("bit");

                    b.Property<int?>("TiempoPromedioFinalizacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadisticaEntidadId");

                    b.HasIndex("FacultadId");

                    b.ToTable("Carreras");
                });

            modelBuilder.Entity("UniversidadesAPI.Models.EstadisticaEntidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BolsaDeTrabajo")
                        .HasColumnType("int");

                    b.Property<int>("CalidadAdministrativa")
                        .HasColumnType("int");

                    b.Property<int>("CalidadDeProfesores")
                        .HasColumnType("int");

                    b.Property<int>("CalidadUniversidad")
                        .HasColumnType("int");

                    b.Property<int>("DificultadIngreso")
                        .HasColumnType("int");

                    b.Property<int>("DisponibilidadDeHorarios")
                        .HasColumnType("int");

                    b.Property<int>("ExigenciaAcademica")
                        .HasColumnType("int");

                    b.Property<int>("Infraestructura")
                        .HasColumnType("int");

                    b.Property<int>("Politizacion")
                        .HasColumnType("int");

                    b.Property<int>("RelacionCalidadPrecio")
                        .HasColumnType("int");

                    b.Property<int>("SalidaLaboral")
                        .HasColumnType("int");

                    b.Property<int>("SatisfaccionProfesion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EstadisticaEntidades");
                });

            modelBuilder.Entity("UniversidadesAPI.Models.Facultad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EstadisticaEntidadId")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaginaWeb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Publica")
                        .HasColumnType("bit");

                    b.Property<int?>("UniversidadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadisticaEntidadId");

                    b.HasIndex("UniversidadId");

                    b.ToTable("Facultades");
                });

            modelBuilder.Entity("UniversidadesAPI.Models.Opinion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BolsaDeTrabajo")
                        .HasColumnType("int");

                    b.Property<int?>("CalidadAdministrativa")
                        .HasColumnType("int");

                    b.Property<int?>("CalidadDeProfesores")
                        .HasColumnType("int");

                    b.Property<int?>("CalidadUniversidad")
                        .HasColumnType("int");

                    b.Property<int?>("CarreraId")
                        .HasColumnType("int");

                    b.Property<int?>("DificultadIngreso")
                        .HasColumnType("int");

                    b.Property<int?>("DisponibilidadDeHorarios")
                        .HasColumnType("int");

                    b.Property<int?>("ExigenciaAcademica")
                        .HasColumnType("int");

                    b.Property<int?>("Infraestructura")
                        .HasColumnType("int");

                    b.Property<int?>("Politizacion")
                        .HasColumnType("int");

                    b.Property<int?>("RelacionCalidadPrecio")
                        .HasColumnType("int");

                    b.Property<int?>("SalidaLaboral")
                        .HasColumnType("int");

                    b.Property<int?>("SatisfaccionProfesion")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("VolveriasAEstudiarLoMismo")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CarreraId");

                    b.HasIndex("UserId");

                    b.ToTable("Opiniones");
                });

            modelBuilder.Entity("UniversidadesAPI.Models.Universidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EsPublica")
                        .HasColumnType("bit");

                    b.Property<int?>("EstadisticaEntidadId")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaginaWeb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TieneCursoIngreso")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EstadisticaEntidadId");

                    b.ToTable("Universidades");
                });

            modelBuilder.Entity("UniversidadesAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfirmationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UniversidadesAPI.Models.Carrera", b =>
                {
                    b.HasOne("UniversidadesAPI.Models.EstadisticaEntidad", "EstadisticaEntidad")
                        .WithMany()
                        .HasForeignKey("EstadisticaEntidadId");

                    b.HasOne("UniversidadesAPI.Models.Facultad", "Facultad")
                        .WithMany("Carreras")
                        .HasForeignKey("FacultadId");

                    b.Navigation("EstadisticaEntidad");

                    b.Navigation("Facultad");
                });

            modelBuilder.Entity("UniversidadesAPI.Models.Facultad", b =>
                {
                    b.HasOne("UniversidadesAPI.Models.EstadisticaEntidad", "EstadisticaEntidad")
                        .WithMany()
                        .HasForeignKey("EstadisticaEntidadId");

                    b.HasOne("UniversidadesAPI.Models.Universidad", "Universidad")
                        .WithMany("Facultades")
                        .HasForeignKey("UniversidadId");

                    b.Navigation("EstadisticaEntidad");

                    b.Navigation("Universidad");
                });

            modelBuilder.Entity("UniversidadesAPI.Models.Opinion", b =>
                {
                    b.HasOne("UniversidadesAPI.Models.Carrera", "Carrera")
                        .WithMany("Opiniones")
                        .HasForeignKey("CarreraId");

                    b.HasOne("UniversidadesAPI.Models.User", "User")
                        .WithMany("Opiniones")
                        .HasForeignKey("UserId");

                    b.Navigation("Carrera");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UniversidadesAPI.Models.Universidad", b =>
                {
                    b.HasOne("UniversidadesAPI.Models.EstadisticaEntidad", "EstadisticaEntidad")
                        .WithMany()
                        .HasForeignKey("EstadisticaEntidadId");

                    b.Navigation("EstadisticaEntidad");
                });

            modelBuilder.Entity("UniversidadesAPI.Models.Carrera", b =>
                {
                    b.Navigation("Opiniones");
                });

            modelBuilder.Entity("UniversidadesAPI.Models.Facultad", b =>
                {
                    b.Navigation("Carreras");
                });

            modelBuilder.Entity("UniversidadesAPI.Models.Universidad", b =>
                {
                    b.Navigation("Facultades");
                });

            modelBuilder.Entity("UniversidadesAPI.Models.User", b =>
                {
                    b.Navigation("Opiniones");
                });
#pragma warning restore 612, 618
        }
    }
}
